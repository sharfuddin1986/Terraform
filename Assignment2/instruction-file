


############################################      Assignment-2    ####################################

                                     1. Destroy the previous deployment
                                     2. Create a new EC2 instance with an Elastic IP 
                               
                            

######################    Follow the below command to execute the Assignment      ############################################
Step-1    
       terraform destroy
       nano main.tf  

provider "aws" {
    access_key = "AKIRERERFEYAETEEY5JKKUS2GMKZPF5EY6MJY5G"
    secret_key = "2V+XN4Syn3THTHTRRKUodjt7vhYJYJYJYJtVphkHsjqPOlYA/kp34dnv"
    region = "us-east-1"
}
resource "aws_instance" "example" {
  ami           = "ami-053b0d53c279acc90"  # Use the AMI ID for your desired OS and region
  instance_type = "t2.micro"               # Change this to your desired instance type
}

resource "aws_eip" "example" {
  instance = aws_instance.example.id
}

Step-2
       nano variables.tf  


variable "aws_region" {
  description = "AWS region for the EC2 instance and Elastic IP"
  default     = "us-east-1"
}

variable "access_key" {
        description = "AKIAS2GMZPFGRGRGRGEY5JTJHHF5EY6MJY5G"
}
variable "secret_key" {
        description = "2V+XN4GSyn3odGRGRjt7vhJtVpGFGFhkHsjqPOlYA/kp34dnv"
}

variable "ami_id" {
  description = "AMI ID for the EC2 instance"
  default     = "ami-053b0d53c279acc90"
}

variable "instance_type" {
  description = "Instance type for the EC2 instance"
  default     = "t2.micro"
}

variable "subnet_id" {
  description = "Subnet ID where the EC2 instance will be launched"
  default     = "subnet-0b39a527e8661296f"
}



Step-3
       install cli and login
       aws configure
       terraform init
       terraform plan
       terraform apply


################################## Note-IAM user should be AmazonEC2FullAccess permission ######################################

       
